[tool.poetry]
name = "nbdefense"
description = "NB Defense CLI and SDK"
version = "0.0.0"
authors = ["ProtectAI <community@protectai.com>"]
readme = "README.md"
packages = [{ include = "nbdefense" }]
license = "Apache License 2.0"
exclude = ["tests/*", "Makefile"]

[tool.poetry.scripts]
nbdefense = "nbdefense.cli:cli"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
click = "^8.1.3"
requirements-parser = "0.5.0"
detect-secrets = "1.4.0"
nbformat = "5.10.4"
presidio_analyzer = "2.2.354"
nbconvert = "7.16.4"
jinja2 = "^3.1.2"
requests = "2.31.0"
tqdm = "4.66.2"
rich = "12.6.0"
pandas = "^1.3.5"
tomlkit = "0.12.4"
[tool.poetry.group.test.dependencies]
pytest = "7.2.0"
pytest-watch = "4.2.0"
responses = "0.22.0"
bandit = { version = "1.7.8", extras = ["toml"] }
mypy = "1.1.1"
types-requests = "2.28.11.15"
types-tqdm = "4.65.0.0"
types-setuptools = "67.6.0.5"
lxml = "^4.9.3"
nvidia-cublas-cu11 = { version = "11.10.3.66", platform = 'linux' }
nvidia-cuda-cupti-cu11 = { version = "11.7.101", platform = 'linux' }
nvidia-cuda-nvrtc-cu11 = { version = "11.7.99", platform = 'linux' }
nvidia-cuda-runtime-cu11 = { version = "11.7.99", platform = 'linux' }
nvidia-cudnn-cu11 = { version = "8.5.0.96", platform = 'linux' }
nvidia-cufft-cu11 = { version = "10.9.0.58", platform = 'linux' }
nvidia-curand-cu11 = { version = "10.2.10.91", platform = 'linux' }
nvidia-cusolver-cu11 = { version = "11.4.0.1", platform = 'linux' }
nvidia-cusparse-cu11 = { version = "11.7.4.91", platform = 'linux' }
nvidia-nccl-cu11 = { version = "2.14.3", platform = 'linux' }
nvidia-nvtx-cu11 = { version = "11.7.91", platform = 'linux' }

[tool.poetry.group.dev.dependencies]
black = "24.4.2"
pre-commit = "2.20.0"
dunamai = "1.21.0"
en_core_web_trf = [
  { url = "https://github.com/explosion/spacy-models/releases/download/en_core_web_trf-3.6.1/en_core_web_trf-3.6.1-py3-none-any.whl" },
]

[tool.poetry.group.prod.dependencies]
dunamai = "1.21.0"

[tool.poetry-dynamic-versioning]
enable = true

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
exclude_dirs = ["tests"]
